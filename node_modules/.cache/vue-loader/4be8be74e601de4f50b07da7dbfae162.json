{"remainingRequest":"C:\\Users\\Mohd Maqbool\\vue\\quiz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mohd Maqbool\\vue\\quiz\\src\\components\\QuestionBox.vue?vue&type=style&index=0&id=62ab2b85&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Mohd Maqbool\\vue\\quiz\\src\\components\\QuestionBox.vue","mtime":1605704588892},{"path":"C:\\Users\\Mohd Maqbool\\vue\\quiz\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mohd Maqbool\\vue\\quiz\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Mohd Maqbool\\vue\\quiz\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Mohd Maqbool\\vue\\quiz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mohd Maqbool\\vue\\quiz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAubGlzdC1ncm91cHsKICAgICBtYXJnaW4tYm90dG9tOiAxNXB4OwogfQogLmxpc3QtZ3JvdXAtaXRlbTpob3ZlcnsKICAgICBiYWNrZ3JvdW5kOiAjRUVFOwogICAgIGN1cnNvcjogcG9pbnRlcjsKIH0KIC5idG57CiAgICAgbWFyZ2luIDowcHggNXB4OwogfQogLnNlbGVjdGVkewogICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTsKfQouY29ycmVjdGVkewogICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmVlbjsKfQouaW5jb3JyZWN0ewogICAgYmFja2dyb3VuZC1jb2xvcjogcmVkOwp9Cg=="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"question-box-container\">\r\n    <b-jumbotron >\r\n    \r\n\r\n    <template #lead>\r\n        {{currentQuestion.question}}\r\n      </template>\r\n\r\n    <hr class=\"my-4\">\r\n           <b-list-group>\r\n  <b-list-group-item\r\n       v-for=\"(answer,index) in answers\"  \r\n       :key=\"index\"\r\n       @click.prevent=\"selectAnswer(index)\"\r\n       :class= \"answerClass(index)\"\r\n  >\r\n     {{ answer }}</b-list-group-item>\r\n\r\n</b-list-group>\r\n    \r\n\r\n   \r\n    <b-button @click=\"prev\" variant=\"success\"\r\n      :disabled=\"isClicked\"\r\n    >Previous</b-button>\r\n    <b-button @click=\"next\" variant=\"success\" \r\n    :disabled=\"selectedIndex >= 9\"\r\n    >Next</b-button>\r\n     <b-button \r\n    variant=\"primary\"\r\n    @click = \"submitAnswer\"\r\n    :disabled=\"selectedIndex === null || answered\"\r\n    >\r\n    Submit\r\n\r\n    </b-button>\r\n    \r\n  </b-jumbotron>\r\n    \r\n  </div>\r\n</template>\r\n<script>\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n    props: {\r\n        currentQuestion: Object,\r\n        next: Function,\r\n        prev: Function,\r\n        increment: Function\r\n    },\r\n    data: function() \r\n        \r\n     {\r\n            return {\r\n                selectedIndex: null,\r\n                correctIndex: null,\r\n                shuffledAnswers: [],\r\n                answered: false,\r\n                isClicked: false\r\n            } \r\n    },\r\n    computed: {\r\n        answers() {\r\n          \r\n        let answers=[...this.currentQuestion.incorrect_answers]\r\n\r\n       answers.push(this.currentQuestion.correct_answer)\r\n       return answers\r\n      }\r\n    },\r\n    watch:{\r\n               currentQuestion: {\r\n                   immediate:true,\r\n                   handler(){\r\n                          this.selectedIndex = null\r\n                          this.answered = false\r\n                          this.shuffleAnswers()\r\n                   }\r\n               }\r\n               \r\n             },\r\n    methods:{\r\n        selectAnswer(index){\r\n            this.selectedIndex = index\r\n              },\r\n              submitAnswer(){\r\n                    let isCorrect = false\r\n                    this.isClicked = true\r\n                    \r\n                    if(this.selectedIndex === this.correctIndex){\r\n                   isCorrect=true\r\n                   }\r\n                   this.answered = true\r\n                  \r\n                   \r\n                   this.increment(isCorrect) \r\n                   \r\n              },\r\n        shuffleAnswers(){\r\n            let answers=[...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\r\n            this.shuffledAnswers = _.shuffle(answers)\r\n            this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\r\n        },\r\n        answerClass(index){\r\n            let answerClass = ''\r\n\r\n            if(!this.answered && this.selectedIndex === index){\r\n                answerClass = 'selected'\r\n            }\r\n            else if (this.answered && this.correctIndex === index){\r\n                answerClass = 'corrected'\r\n            }\r\n            else if (this.answered && this.selectedIndex === index && this.correctIndex!== index){\r\n                answerClass = 'incorrect'\r\n            }\r\n                  \r\n            return answerClass\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n  .list-group{\r\n      margin-bottom: 15px;\r\n  }\r\n  .list-group-item:hover{\r\n      background: #EEE;\r\n      cursor: pointer;\r\n  }\r\n  .btn{\r\n      margin :0px 5px;\r\n  }\r\n  .selected{\r\n      background-color: lightblue;\r\n }\r\n .corrected{\r\n     background-color: lightgreen;\r\n }\r\n .incorrect{\r\n     background-color: red;\r\n }\r\n</style>"]}]}